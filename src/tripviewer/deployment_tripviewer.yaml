apiVersion: v1
kind: Namespace
metadata:
  name: tripviewer
  labels:
    name: web
---

apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "1"    
  labels:
    app: tripinsights-tripviewer
  name: tripinsights-tripviewer
  namespace: web
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: tripinsights-tripviewer
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:      
      labels:
        app: tripinsights-tripviewer
    spec:
      containers:
      - env:
        - name: USERPROFILE_API_ENDPOINT
          value: http://tripinsights-userprofile.userprofile
        - name: TRIPS_API_ENDPOINT
          value: http://tripinsights-trips.trips
        - name: ASPNETCORE_ENVIRONMENT
          value: Development
        - name: SQL_USER
          valueFrom:
            secretKeyRef:
              key: SQL_USER
              name: sql
        - name: SQL_PASSWORD
          valueFrom:
            secretKeyRef:
              key: SQL_PASSWORD
              name: sql
        - name: SQL_SERVER
          valueFrom:
            secretKeyRef:
              key: SQL_SERVER
              name: sql
        - name: SQL_DBNAME
          valueFrom:
            secretKeyRef:
              key: SQL_DBNAME
              name: sql
        image: registrydiw3256.azurecr.io/tripinsights/tripviewer:latest
        imagePullPolicy: Always
        name: tripviewer
        ports:
        - containerPort: 80
          protocol: TCP
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30

